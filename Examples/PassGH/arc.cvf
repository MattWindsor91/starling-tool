/* Atomic reference counter
 * Example taken from Derek / Rust: http://www.mpi-sws.org/~dreyer/talks/talk-dagstuhl16.pdf
 * Allocated version of Examples/Pass/arc2.cvf
 */

typedef int ArcNode;
typedef int Int;

pragma grasshopper_include {./grasshopper/arc-module.spl};
pragma grasshopper_footprint {ArcFoot};
pragma grasshopper_footprint_sort {Set<ArcNode>};

view iter arc(ArcNode x);
view countCopy(ArcNode x, Int c);

method init(ArcNode ret) {
  {| emp |}
    <| ret = %{ new ArcNode };
       %{ [|ret|].count := 1 }; |>
  {| arc(ret) |}
}

method clone(ArcNode x) {
  {| arc(x) |}
    <| %{ [|x|].count := [|x|].count + 1 }; |>
  {| arc(x) * arc(x) |}
}

method print(ArcNode x) {
  {| arc(x) |}
    thread Int pval;
    <| pval = %{ [|x|].val }; |>
  {| arc(x) |}
}

method drop(ArcNode x) {
  {| arc(x) |}
    thread Int c;
    <| c = %{ [|x|].count };
       %{ [|x|].count := [|x|].count - 1 }; |>
  {| countCopy(x, c) |}
    if c == 1 {
      {| countCopy(x, 1) |}
         <| %{ free([|x|]) }; |>
      {| emp |}
    }
  {| emp |}
}

constraint iter[n] arc(x) ->
    n > 0 => %{ [|x|] in ArcFoot && [|n|] <= [|x|].count };

constraint countCopy(x, c) ->
    c == 1 => %{ [|x|] in ArcFoot && [|x|].count == 0 };

constraint countCopy(x, m) * countCopy(y, n) ->
    x == y => ((m != 1) || (n != 1));
