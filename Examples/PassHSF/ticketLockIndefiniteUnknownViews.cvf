/*
 * Linux-style ticket lock with some constraints & views left indefinite.
 */

search 2;  

shared int ticket;  // The next ticket to hand out.
shared int serving; // The current ticket holding the lock.
thread int t;  // The thread's current ticket.
thread int s;  // The thread's current view of serving.

/*
 * Locks the ticket lock.
 */
method lock() {
  {| emp |}
    <| t = ticket++; |>
  {| ? |}
    do {
      {| ? |}
        <| s = serving; |>
      {| ? |}
    } while (s != t);
  {| holdLock() |}
}

/*
 * Unlocks the ticket lock.
 */
method unlock() {
  {| holdLock() |}
    <| serving++; |>
  {| emp |}
}

view holdTick(int t);
view holdLock();

// // Invariant
// constraint emp                         -> ?;
// 
// // Predicate definitions
// constraint holdTick(t)                 -> ?;
// constraint holdLock()                  -> ?;
// 
// // Interactions
// constraint holdLock()   * holdTick(t)  -> ?;
// constraint holdTick(ta) * holdTick(tb) -> ?;
constraint holdLock()   * holdLock()   -> false;
